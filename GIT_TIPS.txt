ՀՈՒՇԱԹԵՐԹ

git init			| Ստեղծում է նոր լոկալ Git ռեպոզիտորիա:

git clone <url>			| Պատճենում է գոյություն ունեցող ռեպոզիտորիան նշված հասցեից:

git status			| Ցուցադրում է ռեպոզիտորիայի ընթացիկ վիճակը, ցույց է տալիս փոփոխված ֆայլերը (add, modified, deleted):

git add <filename>		| Ավելացնում է ֆայլը լոկալ Git ռեպոզիտորի տարածքում:

git commit -m "<message>"	| Պահպանում է փոփոխությունները լոկալ Git ռեպոզիտորի մեջ՝ նշելով Ձեր հաղորդագրությունը, օրը, ժամը ու պահպանողին:

git log				| Ցուցադրում է գործառնությունների պատմությունը՝ ժամանակագրական կարգով: Եթե լոգերը շատ են, ապա այն ցույց է տալիս մաս մաս։ Սեղմեք Enter հաջորդ մասը տեսնելու համար, սեղմեք q դիտումի ռեժիմը փակելու համար

git branch			| Ցուցադրում է գոյություն ունեցող ճյուղերը (main, master, ...):

git checkout <branch-name>	| Փոփոխվում է նշված ճյուղին, օրինակ ունենք 3 ճյուղ՝ main, frontend, backend: Ֆրոնտենդ ծրագրավորողը պետք է գրի կոդ frontend ճյուղում, դրա համար ինքը տերմինալում կմուտքագրի git checkout frontend:

git merge <branch-name>		| Միացնում է նշված ճյուղի փոփոխությունները ներկա ճյուղին: Այլ կերպ ասած մեր ճյուղին միաձուլում է մեկ այլ ճյուղի փոփոխությունները։

git pull			| Բեռնում է նոր փոփոխությունները օնլայն ռեպոզիտորիայից: Այսինքն եթե ուրիշ ծրագրավորող կամ հենց մենք ռեպազիտորիայում կոդ ենք փոփոխել ուրիշ համակարգչից ու ուղարկել ենք օնյան ռեպո, ապա գրում ենք այս հրամանը որ ներբեռնենք այդ փոփոխությունը նոր համակարգիչ։

git push			| Ստեղծում է փոփոխությունները օնլայն ռեպոզիտորիայում: Այսինքն, եթե ուզում եմ իմ կատարած փոփոխությունները պահպանվի օնլայն ռեպոյում պետք է գրեմ այս հրամանը git add, git commit հրամաններից հետո

git reset			| Վերադարձնում է վերջին գործառնությունը կամ փոփոխությունները: Կոպիտ ասած ctrl + Z ի նման գործողություն է

git stash			| արխիվացնում է ներկայիս փոփոխությունները՝ վերադառնալով վերջին կոմիտին: Կոպիտ ասած ctrl + X ի նաման գործողություն է

git stash pop			| Վերադարձնում է արխիվացված փոփոխությունը, այն ջնջելով արխիվից։ Կոպիտ ասած ctrl + V ի նման է, սակայն կարող ենք անել դա միայն մեկ անգամ

git stash apply			| Վերադարձնում է արխիվացված փոփոխությունը, սակայն այն չի ջնջում արխիվից։ Կոպիտ ասած ctrl + V ի նման է։

git diff			| Ցուցադրում է տարբերությունները ռեպոզիտորի փուլային տարածքի և կոմիտի միջև: Այս նույն բանը ուղղակի կարող ենք տեսնել visualStudio ի մեջ տողի համարի աջ կողմը գունավոր գծերին քլիկ անելիս։ Կանաչ գույնի
				  գիծը նշանակում է, որ նոր բան ենք ավելացրել, կապույտը՝ փոփոխել, կարմիրը՝ ջնջել։

git remote -v			| Ցուցադրում է օնլայն ռեպոզիտորիաների հասցեները: Այսինքն եթե մոռացել ենք ինչ հասցեում է մեր ռեպոն այս հրամանը մեզ կհուշի