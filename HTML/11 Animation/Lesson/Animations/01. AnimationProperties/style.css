/* Անիմացիայի ինչ հատկություններ պետք է կիրառվեն և ինչ
   անունով պետք է կանչվի անւմացիան
*/
@keyframes animationName {

	/* անիմացիայի սկզբ */
	from {}

	/* անիմացիայի ավարտ */
	to {}

	/* կադրերի տոկոսային նշում */
	25%,
	50%,
	75% {}
}

.test {
	width: 100px;
	height: 100px;
	background-color: purple;

	/* Այն անիմացիայի անունը, որը կկիրառվի տեգի վրա */
	animation-name: animationName;
	/* ժամանակահատվածը, որի ընթացկում պետք է կատարվի անիմացիան */
	animation-duration: 2s;
	/* Անիմացիայի արագության փոփոխության տեսակները */
	/* Համաչափ արագացում */
	animation-timing-function: ease;
	/* անընդհատ արագացում */
	animation-timing-function: linear;
	/* Դանդաղ սկիզբ, արագ ավարտ */
	animation-timing-function: ease-in;
	/*  Արագ սկիզբ, դանդաղ ավարտ */
	animation-timing-function: ease-out;
	/* Դանդաղ սկիզբ և ավարտ */
	animation-timing-function: ease-in-out;
	/* Սեփական արագության կորը */
	animation-timing-function: cubic-bezier(0.5, 0, 0.5, 1);
	/* Անիմացիայի սկզբից առաջ դադար */
	animation-delay: 1s;
	/* Քանի անգամ կրկնվի անիմացիան */
	/* անիմացիան կկրկնվի 5 անգամ */
	animation-iteration-count: 5;
	/* անվերջ ցիկլ */
	animation-iteration-count: infinite;
	/* Որ ուղղությամբ պետք է կրկնվի անիմացիան */
	/* ստանդարտ ուղղություն */
	animation-direction: normal;
	/* հակառակ ուղղություն */
	animation-direction: reverse;
	/* ուղղությունների փոխեփոխ կրկնություն */
	animation-direction: alternate;
	/* ուղղությունների հակառակ փոխեփոխ կրկնություն */
	animation-direction: alternate-reverse;
	/* Որոշում է անիմացիաի ցուցադրման ընթացքը */
	/* անիմացիան կատարվում է */
	animation-play-state: running;
	/* անիմացիան դադարեցված է */
	animation-play-state: paused;
	/* Սահմանում է, թե ինչ վարքագիծ պետք է ցուցադրի տեգը անիմացիայի
	   սկզբից առաջ և հետո
	*/
	/* Ոչ մի էֆֆեկտ չկա */
	animation-fill-mode: none;
	/* Պահպանում է վերջին կադրի հատկությունը */
	animation-fill-mode: forwards;
	/* պահպանում է առաջին կադրի հատկությունը */
	animation-fill-mode: backwards;
	/* պահպանում է առաջին կադրի և վերջին կադրի հատկությունները */
	animation-fill-mode: both;
	/* Կակտիվանա օրինակ :hover ի ժամանակ */
	/* Գործողության ժամանակ որ հատկություննը պետք է փոփոխվի */
	transition-property: background-color, transform;
	/* Որքան է տևելու փոփոխությունը վարկյաններով */
	transition-duration: 0.5s;
	/* Անիմացիան արագության փոփոխության տիպը */
	transition-timing-function: ease;
	/* Որքան դադար լինի մինչև անիմացիայի սկիզբը */
	transition-delay: 0.1s;
}

.test:hover {
	background-color: #e74c3c;
	transform: scale(1.2);
}

@keyframes move {
	from {
		transform: translateX(0);
	}

	to {
		transform: translateX(300px);
	}
}

.box {
	width: 100px;
	height: 100px;
	background-color: blue;
	animation-name: move;
	animation-duration: 2s;
	animation-timing-function: ease-in-out;
	animation-iteration-count: 2;
	animation-direction: alternate;
	animation-fill-mode: backwards;

}



/* Prespective */
.container {
    perspective: 1000px; /* Устанавливаем перспективу */
}

.box2 {
    width: 100px;
    height: 100px;
    background-color: #3498db;
    transform-style: preserve-3d; /* Позволяет дочерним элементам сохранять 3D-преобразования */
    animation: rotate 5s infinite linear; /* Анимация вращения */
}

@keyframes rotate {
    0% {
        transform: rotateX(0deg) rotateY(0deg); /* Указываем вращение вокруг осей X и Y */
    }
    100% {
        transform: rotateX(360deg) rotateY(360deg); /* Вращаем на 360 градусов вокруг обеих осей */
    }
		/* transform: skewX(0deg) */
}